<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc compact="yes" ?> <!-- Conserve vertical whitespace -->
<?rfc strict="no" ?>
<?rfc toc="yes" ?>
<?rfc symrefs="yes" ?>
<rfc category="info" ipr="trust200902"
docName="draft-procter-dispatch-outbound-discovery-00">

    <front>
        <title abbrev="Discovering outbound proxies">
			Automatic discovery of RFC 5626 Edge Proxies
        </title>
        <author initials="M." surname="Procter"
                fullname="Michael Procter">
            <organization>VoIP.co.uk</organization>
            <address>
                <postal>
                    <street>St Edburg's Hall</street>
                    <street>Priory Road</street>
                    <city>Bicester</city>
                    <region>Oxfordshire</region>
                    <code>OX26 6BL</code>
                    <country>UK</country>
                </postal>
                <email>michael@voip.co.uk</email>
                <uri>http://www.voip.co.uk</uri>
            </address>
        </author>

        <date day="04" month="July" year="2014"/>

        <workgroup>DISPATCH</workgroup>

        <abstract><t>

<xref target="RFC5626"/> (commonly known as 'SIP outbound') defines
mechanisms that permit SIP (Session Initiation Protocol) UAs (User
Agents) to maintain multiple connections to a registrar or proxy via
multiple Edge Proxies, known as the outbound-proxy-set.  Discovering
the URIs that make up the outbound-proxy-set is left to configuration
or future discovery mechanisms.
This draft defines a simple discovery mechanism that enables UAs to
discover the URIs of all the Edge Proxies in the outbound-proxy-set
without requiring additional configuration on the UA.

</t></abstract>
    </front>

<middle>
<section title="Introduction">
<t>
Reliably maintaining connectivity between a SIP UA and a registrar
across the Internet, in the presence of NATs, routing changes,
and maintenance of intervening equipment is made more straightforward
by <xref target="RFC5626"/>.  The mechanisms in that specification allow
multiple connections over diverse routes, equipment, and data centres,
which permit a more robust SIP service to be created.
</t>
<t>
However, one of the hurdles that is preventing wide-spread use of these
mechanisms is discovering the outbound-proxy-set, the list of suitable
edge proxies that a UA may use for multiple connections.  Some UAs
permit this set to be configured, but the large number of options
available on many UAs means that configuration for robustness is often
overlooked once basic operation is possible.
</t>
<t>
This draft describes a simple mechanism by which a UA may advertise
willingness to use the capabilities of <xref target="RFC5626"/> by
determining the outbound-proxy-set from the DNS.  Should the registrar
know that the outbound-proxy-set may be determined from the DNS,
it can indicate such support in a successful response to a REGISTER
request.  The UA, upon receiving that indication, may then determine the
outbound-proxy-set and continue to register multiple flows as described
in <xref target="RFC5626"/>.
</t>
</section>

<section title="User Agent Behaviour">
<section title="Advertising support">
<t>
A UA may register as normal, following the rules in section 4.2 of
<xref target="RFC5626"/>, but with an additional Supported option: obfromsrv.
</t>
<figure><artwork><![CDATA[
   REGISTER sip:example.com SIP/2.0
   Via: SIP/2.0/TCP 192.0.2.2;branch=z9hG4bK-bad0ce-11-1036
   Max-Forwards: 70
   From: Bob <sip:bob@example.com>;tag=d879h76
   To: Bob <sip:bob@example.com>
   Call-ID: 8921348ju72je840.204
   CSeq: 1 REGISTER
   Supported: path, outbound, obfromsrv
   Contact: <sip:line1@192.0.2.2;transport=tcp>; reg-id=1;
    ;+sip.instance="<urn:uuid:00000000-0000-1000-8000-000A95A0E128>"
   Content-Length: 0
]]></artwork></figure>
<t> The presence of this option indicates that the UA is willing to
determine the outbound-proxy-set from the DNS as described later.  The
response from the registrar will indicate whether this action is to be
taken or not.
</t>
</section>
<section title="Determining the outbound-proxy-set">
<t>If the successful response from the registrar includes the same option
(obfromsrv), then the UA may gather all edge proxies named in the SRV
records and use them to populate the outbound-proxy-set.  
</t>
<t>The DNS SRV lookup will result in a set of targets and ports, along
with weights and priorities.  For the purpose of determining the
outbound-proxy-set, the weights and priorities are discarded.  The
targets and ports are transformed into URIs by combining them with the
scheme and protocol used in the the SRV query.
</t>
<t>TODO: We could use the SRV weights and priorities to map to q-values
on the registered contacts, but I'm not convinced mapping inbound and
outbound preferences together like this is necessarily helpful.
</t>
<figure>
<preamble>
For example, a DNS SRV query for '_sip._tcp.example.net' might result in the responses:
</preamble>
<artwork>
    SRV 0 5 5060 edge-01.example.net.
    SRV 0 5 5060 edge-02.example.net.
    SRV 5 0 5060 edge-fallback.example.net.
</artwork>
</figure>
<figure>
<preamble>
These should be mapped to the following URIs, which will now form the
outbound-proxy-set:
</preamble>
<artwork>
    sip:edge-01.example.net:5060;transport=tcp
    sip:edge-02.example.net:5060;transport=tcp
    sip:edge-fallback.example.net:5060;transport=tcp
</artwork>
</figure>
<t>TODO: omit port if it is default for transport?  Need to specify at
least one of port and transport to prevent another round of NAPTR
lookups when the o-p-s is used for loose routing to the Edge Proxy.
</t>
<t>
Following the construction of the outbound-proxy-set, the procedures in
<xref target="RFC5626"/> section 4.2 may be followed.
</t>
</section>
<section title="Maintaining the outbound-proxy-set">
<t>Since the outbound-proxy-set is now determined dynamically, rather
than through static configuration, care should be taken to respect the
relevant DNS TTL values and ensure that when the DNS
records change, the configuration of the outbound-proxy-set and the 
number and destinations of registrations are updated accordingly.
</t>
</section>
</section>

<section title="Registrar behaviour">
<t>For a registrar that already supports <xref target="RFC5626"/>, there
is only one change.  If the registrar is aware that the DNS records
relating to it are suitably configured to be used in the way this
document describes, and a UA attempting to register indicates support
for these procedures, then it may signal acceptance by including the
token 'obfromsrv' in the Supported header of the successful REGISTER
response.
</t>
<t>The registrar is typically made aware of support for this feature
through adminstrative means, such as a configuration change.  It might
also be configured to only indicate support to a subset of UAs.
</t>
</section>

<section title="Edge Proxy considerations">
<t> There are no changes needed for the correct operation of Edge Proxies.
</t>
</section>

<section title="Other approaches">
<t>
This section gives a brief overview of other possible approaches.  It
can/will be deleted before publishing.
</t>
<section title="Return O-P-S URIs in new header from registrar">
<t>Add a new SIP header (e.g. Outbound-URIs:) containing a list of
SIP URIs to use as the outbound-proxy-set to the 200 response from the
registrar to the UA.
</t>
<t>This will require changes to the registrar and UA only, assuming the
edge proxies are transparent to the new header.  It is a very flexible
arrangement, as the list can be dynamically generated on a per-UA basis
if required, and not generated at all to permit a controlled rollout of
the new functionality.
</t>
</section>
<section title="Indicate O-P-S in DNS">
<t>Add a DNS record either containing the outbound-proxy-set or
indicating that it may safely be derived from the existing SRV records.
</t>
<t>This requires no changes to the registrar or edge proxies, and only a
presumably straightforward DNS update, but the UA will potentially need 
new DNS lookups to change behaviour.  This approach also prevents a
staged rollout of the functionality since all UAs supporting the feature
will discover it at the same time.
</t>
</section>
</section>

<!-- 
<section title="Acknowledgements">
<t>
</t>
</section>
-->

<section title="Security Considerations">
<t>
TODO
</t>
</section>

<section title="IANA Considerations">
<t>
TODO
</t>
</section>

</middle>
<back>
    <references title="Normative References">
        <?rfc include='reference.RFC.5626'?>
    </references>
    <!--<references title="Informative References">
    </references> -->
</back>
</rfc>
<!-- vim:set ts=4 et tw=72:  -->
